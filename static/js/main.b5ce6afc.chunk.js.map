{"version":3,"sources":["reducers.js","actions.js","components/Todoitem.jsx","containers/App.jsx","constants.js","index.js"],"names":["initialStateAdd","list","count","Todoitem","props","onClick","onChecked","item","connect","state","dispatch","onAddItem","text","type","id","payload","onRemoveItem","data","removeElement","useState","inputText","setInputText","className","onChange","event","newValue","target","value","map","todoItem","index","key","logger","createLogger","store","createStore","action","filter","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"kNAEMA,EAAkB,CAChBC,KAAK,I,wBCFTC,EAAM,ECWKC,MAXf,SAAkBC,GAChB,OACE,wBACEC,QAAS,WACPD,EAAME,UAAUF,EAAMG,QAGvBH,EAAMG,OCqDEC,mBAzDS,SAAAC,GACvB,MAAO,CACNR,KAAMQ,EAAMR,SAIa,SAACS,GAC3B,MAAO,CACNC,UAAW,SAACC,GAAD,OAAUF,EFVe,CAClCG,KGHuB,cHIvBC,GAAIZ,IACJa,QEOuCH,KACzCI,aAAc,SAACC,GAAD,OAAUP,EFNG,SAACO,GAAD,MAAW,CACpCJ,KGP4B,mBHQ5BE,QAAQE,GEIuBC,CAAcD,QAgDlCT,EA5Cf,SAAaJ,GACX,IAAOO,EAAiCP,EAAjCO,UAAWK,EAAsBZ,EAAtBY,aAAcf,EAAQG,EAARH,KAGhC,EAAkCkB,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAaA,OACE,yBAAKC,UAAU,aACb,yBAAKA,UAAU,WACb,2CAEF,yBAAKA,UAAU,QACb,2BAAOC,SAhBS,SAACC,GACrB,IAAMC,EAAWD,EAAME,OAAOC,MAC9BN,EAAaI,IAcsBZ,KAAK,OAAOc,MAAOP,IAClD,4BAAQf,QAZE,WACdM,EAAUS,GACVC,EAAa,MAWP,uCAGJ,6BACE,4BACGpB,EAAK2B,KAAI,SAACC,EAAUC,GAAX,OACR,kBAAC,EAAD,CACEC,IAAKD,EACLhB,GAAIgB,EACJvB,KAAMsB,EACNvB,UAAWU,aE7CnBgB,EAASC,yBACTC,EAAQC,aLDa,WAAuC,IAAtC1B,EAAqC,uDAA/BT,EAAiBoC,EAAc,uDAAP,GACtD,OAAOA,EAAOvB,MACV,IITmB,cJUf,OAAO,2BACAJ,GADP,IAEIR,KAAK,GAAD,mBAAOQ,EAAMR,MAAb,CAAmBmC,EAAOrB,YAEtC,IIbwB,mBJcpB,OAAO,2BACAN,GADP,IAEIR,KAAM,YAAKQ,EAAMR,MAAOoC,QAAQ,SAAA9B,GAC5B,OAAO6B,EAAOrB,UAAYR,OAGtC,QACI,OAAOE,KKdmB6B,YAAgBN,IACtDO,IAASC,OACL,kBAAC,IAAD,CAAUN,MAAOA,GACb,kBAAC,EAAD,OAENO,SAASC,eAAe,W","file":"static/js/main.b5ce6afc.chunk.js","sourcesContent":["import {ADD_TO_LIST, REMOVE_FROM_LIST} from './constants';\r\n\r\nconst initialStateAdd = {\r\n        list:[]\r\n};\r\n\r\n// using the es10 spread operator here as i answered n the interview\r\nexport const currentList = (state=initialStateAdd, action={}) => {\r\n    switch(action.type){\r\n        case ADD_TO_LIST:\r\n            return {\r\n                ...state,\r\n                list: [ ...state.list, action.payload]\r\n            }\r\n        case REMOVE_FROM_LIST:\r\n            return {\r\n                ...state,\r\n                list: [ ...state.list ].filter((item => {\r\n                    return action.payload !== item\r\n                }))\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {ADD_TO_LIST, REMOVE_FROM_LIST} from './constants';\r\nlet count=0;\r\nexport const addElement = (input) => ({\r\n    type:ADD_TO_LIST,\r\n    id: count++,\r\n    payload: input\r\n})\r\nexport const removeElement = (data) => ({\r\n    type:REMOVE_FROM_LIST,\r\n    payload:data\r\n})\r\n","import React from \"react\";\r\nfunction Todoitem(props) {\r\n  return (\r\n    <li\r\n      onClick={() => {\r\n        props.onChecked(props.item);\r\n      }}\r\n    >\r\n      {props.item}\r\n    </li>\r\n  );\r\n}\r\nexport default Todoitem;\r\n","import React, { useState } from \"react\";\nimport {connect} from 'react-redux';\nimport { addElement,removeElement } from \"../actions\";\nimport TodoItem from \"../components/Todoitem\";\nconst mapStateToProps = state => {\n\treturn {\n\t\tlist: state.list\n\t}\n}\n\nconst mapDispatchToProps = (dispatch) => {\n\treturn {\n\t\tonAddItem: (text) => dispatch(addElement(text)),\n\t\tonRemoveItem: (data) => dispatch(removeElement(data))\n\t}\n}\n\nfunction App(props) {\n  const {onAddItem, onRemoveItem, list} = props;\n  // we can use redux store for this as well but it will just add unneeded complexity\n  //to the code as we dont need it anywhere else \n  const [inputText, setInputText] = useState(\"\");\n\n\n   const handleChange = (event) => {\n    const newValue = event.target.value;\n    setInputText(newValue);\n  }\n\n  const addItem = () => {\n    onAddItem(inputText);\n    setInputText(\"\");\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"heading\">\n        <h1>To-Do List</h1>\n      </div>\n      <div className=\"form\">\n        <input onChange={handleChange} type=\"text\" value={inputText} />\n        <button onClick={addItem}>\n          <span>Add</span>\n        </button>\n      </div>\n      <div>\n        <ul>\n          {list.map((todoItem, index) => (\n            <TodoItem\n              key={index}\n              id={index}\n              item={todoItem}\n              onChecked={onRemoveItem}\n            />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","export const ADD_TO_LIST = 'ADD_TO_LIST';\r\nexport const REMOVE_FROM_LIST = 'REMOVE_FROM_LIST';","import React from \"react\";\nimport {applyMiddleware, createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {createLogger} from 'redux-logger';\nimport {currentList} from './reducers';\nimport ReactDOM from \"react-dom\";\nimport App from \"./containers/App\";\nconst logger = createLogger();\nconst store = createStore(currentList,applyMiddleware(logger));\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>\n, document.getElementById(\"root\"));\n"],"sourceRoot":""}